#!/bin/bash

pressTouchpadKey() {
  key=$(xmodmap -pke |awk '$NF ~ /TouchpadToggle/ { printf($NF); }')
  if [ -z "$key" ]; then
    echo "No touch pad toggle key found"

    return 1
  fi

  xdotool key $key
}

toggleTouchpad() {
  if [ "$1" == "key" ]; then
    pressTouchpadKey
    exit $?
  fi

  touchid=$(xinput list |awk '$0 ~ /Touchpad/ { printf(gensub(/id=/, "", "g", $(NF - 3))); }')

  read code newvalue < <(xinput list-props $touchid |awk '$0 ~ /Device Enabled/ {
    toggle = $NF ? 0 : 1;
    code = gensub(/[^0-9]/, "", "g", $(NF - 1));
    printf("%s %s", code, toggle);
    exit 0;
  }')

  if [ -z "$code" ] || [ -z "$newvalue" ]; then
    echo "code and toggle not found - trying touch key"

    pressTouchpadKey || xinput list-props $touchid

    exit $?
  fi

  xinput set-prop $touchid $code $newvalue
}

toggleTouchscreen() {
  touchid=$(xinput list |grep 'Finger touch' |awk '{print $8}' |sed 's/.*=//g')

  setting=$(xinput list-props $touchid |grep 'Device Enabled' |awk '{print $4}')

  if [[ $setting == 1 ]]; then
    xinput disable $touchid
    echo Disabled touch screen
  else
    xinput enable $touchid
    echo Enabled touch screen
  fi
}

usage='Usage: '$(basename $0)' <option>
options:
  s, -s, --screen, screen    Toggle touch screen
  k, -k, --key, key          Toggle touch screen using key event
  p, -p, --pad, pad          Toggle touch pad'

if [ -z $1 ]; then
  echo "$usage"
  exit 1
fi

case $1 in
  s | -s | --screen | screen) toggleTouchscreen ;;
  k | -k | --key | key) toggleTouchpad key;;
  p | -p | --pad | pad) toggleTouchpad ;;
  *) echo -e "Unknown option $1\n"; echo "$usage"; exit 1 ;;
esac
